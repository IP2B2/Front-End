name: PR Review/Conflict Labeler

on:
  pull_request:
    types: [reopened, opened, synchronize]
  pull_request_review:
    types: [submitted]

permissions:
  pull-requests: write
  issues: write
  actions: write

jobs:
  label-pr-status:
    if: github.event.review.state == 'CHANGES_REQUESTED' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const repo = context.repo;

            const labelsToRemove = ['ready-to-run', 'merged', 'has-conflicts', 'needs-work'];
            for (const label of labelsToRemove) {
              await github.rest.issues.removeLabel({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: pr.number,
                name: label
              }).catch(() => {});
            }

            if (context.eventName === 'pull_request_review' && context.payload.review.state === 'CHANGES_REQUESTED') {
              await github.rest.issues.addLabels({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: pr.number,
                labels: ['needs-work']
              });
              return;
            }

            const { data: mergeablePR } = await github.rest.pulls.get({
              owner: repo.owner,
              repo: repo.repo,
              pull_number: pr.number
            });

            if (mergeablePR.mergeable === false) {
              await github.rest.issues.addLabels({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: pr.number,
                labels: ['has-conflicts']
              });
            }
